// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+o",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack"
    },

    // Split shortcuts
    {
        "key": "ctrl+-",
        "command": "-workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "ctrl+o",
        "command": "-lineBreakInsert",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.switchWindow"
    },
    {
        "key": "ctrl+w l",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "cmd+r cmd+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+w h",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "cmd+r cmd+left",
        "command": "-workbench.action.focusLeftGroup"
    },

    // Remove the shift enter to run python
    {
        "key": "shift+enter",
        "command": "-python.execInREPL",
        "when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !accessibilityModeEnabled && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
    },
    {
        "key": "cmd+i",
        "command": "composerMode.agent"
    },

    // Definition & Declaration
    {
        "key": "alt+f12",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+f12",
        "command": "editor.action.revealDeclaration"
    },

    // Change super complete to Ctrl-G (for Cursor)
    {
        "key": "ctrl+g",
        "command": "editor.action.acceptCursorTabSuggestion",
        "when": "cpp.shouldAcceptTab"
    },
    {
        "key": "tab",
        "command": "-editor.action.acceptCursorTabSuggestion",
        "when": "cpp.shouldAcceptTab"
    },
    {
        "key": "cmd+l",
        "command": "aichat.close-sidebar",
        "when": "activeAIChatEditor || view == 'workbench.panel.aichat.view'"
    },
    {
        "key": "ctrl+g",
        "command": "editor.action.acceptGPT4",
        "when": "hasGPT4Diff"
    },
    {
        "key": "tab",
        "command": "-editor.action.acceptGPT4",
        "when": "hasGPT4Diff"
    },
    {
        "key": "ctrl+g",
        "command": "editor.action.inlineSuggest.commit",
        "when": "inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "tab",
        "command": "-editor.action.inlineSuggest.commit",
        "when": "inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+g",
        "command": "editor.action.inlineSuggest.jump",
        "when": "inlineEditIsVisible && tabShouldJumpToInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "tab",
        "command": "-editor.action.inlineSuggest.jump",
        "when": "inlineEditIsVisible && tabShouldJumpToInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },

    // Native Tabs on Mac
    {
        "key": "shift+cmd+t",
        "command": "workbench.action.newWindowTab"
    },
    {
        "key": "shift+l",
        "command": "workbench.action.nextEditor",
        "when": "editorTextFocus && vim.mode == 'Normal' && vim.active"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "shift+h",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "shift+cmd+]",
        "command": "workbench.action.showNextWindowTab"
    },
    {
        "key": "shift+cmd+[",
        "command": "workbench.action.showPreviousWindowTab"
    },
    // Show documentations
    {
        "key": "shift+k",
        "command": "editor.action.showHover",
        "when": "editorTextFocus && vim.mode == 'Normal' && vim.active"
    }
]
